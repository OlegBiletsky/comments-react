{"version":3,"sources":["constants/actionTypes.js","api/api.js","actions/comments.js","components/Form/index.js","containers/FormContainer.js","actions/form.js","components/CommentsList/index.js","components/MoreComments/index.js","selectors/comments.js","containers/CommentsContainer.js","containers/App.js","reducers/commentsReducer.js","reducers/formReducer.js","reducers/index.js","index.js"],"names":["GET_MORE_COMMENTS_REQUEST","GET_MORE_COMMENTS_SUCCESS","GET_COMMENTS_FAIL","GET_PAGE_COMMENTS_REQUEST","GET_PAGE_COMMENTS_SUCCESS","CHANGE_INPUT_NAME","CHANGE_INPUT_TEXT","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAIL","DOMAIN","BASE","getCommentsFetch","page","fetch","sendCommentFetch","values","method","headers","body","JSON","stringify","getMoreComments","dispatch","a","type","response","json","res","payload","getPageComments","sendPageComments","Form","inputNameValue","inputTextValue","handleChangeNameInput","handleChangeTextInput","sendComments","name","trimStart","trimEnd","text","className","noValidate","onSubmit","e","preventDefault","value","onChange","target","placeholder","onFocus","onBlur","autoComplete","onClick","disabled","connect","state","form","changeInputName","inputValue","changeInputText","CommentsList","comments","length","map","item","created_at","split","slice","MoreComments","lastPage","currentPage","getCommentsSelector","database","getLastPageSelector","getCurrentPageSelector","pages","getPagesSelector","getSeparateCurrentPageSelector","separateCurrentPage","getComments","useState","initial","setInitial","useEffect","fetchData","containerClassName","pageLinkClassName","activeLinkClassName","previousLinkClassName","nextLinkClassName","disabledClassName","breakLinkClassName","pageCount","pageRangeDisplayed","marginPagesDisplayed","previousLabel","nextLabel","onPageChange","selected","initialPage","forcePage","App","initialState","isLoading","error","commentsReducer","action","data","current_page","last_page","formReducer","combineReducers","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2120baa.chunk.js","sourcesContent":["export const GET_MORE_COMMENTS_REQUEST = \"GET_MORE_COMMENTS_REQUEST\";\nexport const GET_MORE_COMMENTS_SUCCESS = \"GET_MORE_COMMENTS_SUCCESS\";\nexport const GET_COMMENTS_FAIL = \"GET_COMMENTS_FAIL\";\n\nexport const GET_PAGE_COMMENTS_REQUEST = \"GET_PAGE_COMMENTS_REQUEST\";\nexport const GET_PAGE_COMMENTS_SUCCESS = \"GET_PAGE_COMMENTS_SUCCESS\";\n\nexport const CHANGE_INPUT_NAME = \"CHANGE_INPUT_NAME\";\nexport const CHANGE_INPUT_TEXT = \"CHANGE_INPUT_TEXT\";\n\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAIL = \"ADD_COMMENT_FAIL\";\n","\nconst DOMAIN = process.env.NODE_ENV === \"development\" ? '' : 'https://jordan.ashton.fashion';\nconst BASE = '/api/goods/30/comments';\n\n\nexport const getCommentsFetch = (page) => {\n    return fetch(`${DOMAIN}${BASE}?page=${page}`);\n}\n\nexport const sendCommentFetch = (values) => {\n    return fetch(`${DOMAIN}${BASE}`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json; charset=utf-8\",\n        },\n        body: JSON.stringify(values),\n    });\n}\n","import {\n    GET_MORE_COMMENTS_REQUEST,\n    GET_MORE_COMMENTS_SUCCESS,\n    GET_COMMENTS_FAIL,\n    GET_PAGE_COMMENTS_REQUEST,\n    GET_PAGE_COMMENTS_SUCCESS,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n    ADD_COMMENT_FAIL,\n} from \"../constants/actionTypes\";\n\nimport { getCommentsFetch, sendCommentFetch } from \"../api/api\";\n\nexport const getMoreComments = (dispatch) => async (page) => {\n    dispatch({ type: GET_MORE_COMMENTS_REQUEST });\n    try {\n        const response = await getCommentsFetch(page);\n        const res = await response.json();\n        dispatch({ type: GET_MORE_COMMENTS_SUCCESS, payload: res });\n    } catch (e) {\n        dispatch({ type: GET_COMMENTS_FAIL, payload: e });\n    }\n};\nexport const getPageComments = (dispatch) => async (page) => {\n    dispatch({ type: GET_PAGE_COMMENTS_REQUEST });\n    try {\n        const response = await getCommentsFetch(page);\n        const res = await response.json();\n        dispatch({ type: GET_PAGE_COMMENTS_SUCCESS, payload: res });\n    } catch (e) {\n        dispatch({ type: GET_COMMENTS_FAIL, payload: e });\n    }\n};\n\nexport const sendPageComments = (dispatch) => async (values) => {\n    dispatch({ type: ADD_COMMENT_REQUEST });\n    try {\n        const response = await sendCommentFetch(values);\n        const res = await response.json();\n        dispatch({ type: ADD_COMMENT_SUCCESS, payload: res });\n    } catch (e) {\n        dispatch({ type: ADD_COMMENT_FAIL, payload: e });\n    }\n};\n","import React from \"react\";\nimport \"../../styles/Form.scss\";\nimport { BsBrightnessHighFill, BsPlusCircleFill } from \"react-icons/bs\";\n\nfunction Form({\n    inputNameValue,\n    inputTextValue,\n    handleChangeNameInput,\n    handleChangeTextInput,\n    sendComments,\n}) {\n    const name = (inputNameValue || '').trimStart().trimEnd();\n    const text = (inputTextValue || '').trimStart().trimEnd();\n\n    return (\n        <>\n            <h1 className='title'>\n                <div className='title__first'>Please leave a comment</div>\n                <div className='title__second'>\n                    <p>Your feedback is appreciated</p>\n                    <BsBrightnessHighFill className='title__icon' />\n                </div>\n            </h1>\n\n            <form\n                className='form'\n                noValidate\n                onSubmit={(e) => e.preventDefault()}\n            >\n                <div className='form-name'>\n                    <input\n                        value={inputNameValue}\n                        onChange={(e) => handleChangeNameInput(e.target.value)}\n                        placeholder='Your name'\n                        onFocus={(e) => (e.target.placeholder = \"\")}\n                        onBlur={(e) => (e.target.placeholder = \"Name\")}\n                        className='form-name__field'\n                        name='form-name__field'\n                        type='text'\n                        autoComplete='off'\n                    />\n                </div>\n\n                <div className='form-text'>\n                    <textarea\n                        value={inputTextValue}\n                        onChange={(e) => handleChangeTextInput(e.target.value)}\n                        placeholder='Add a comment'\n                        onFocus={(e) => (e.target.placeholder = \"\")}\n                        onBlur={(e) => (e.target.placeholder = \"Add a comment\")}\n                        className='form-text__field'\n                        name='form-text__field'\n                        type='text'\n                        autoComplete='off'\n                    />\n                </div>\n\n                <button\n                    className='form-submit-btn'\n                    onClick={async (e) => {\n                        await sendComments({ name, text });\n                        handleChangeNameInput('');\n                        handleChangeTextInput('');\n                    }}\n                    disabled={!(name && text)}\n                >\n                    <div className='form-submit-btn__text-wrapper'>\n                        <div className='form-submit-btn__text'>Comment</div>\n                        <BsPlusCircleFill className='form-submit-btn__icon' />\n                    </div>\n                </button>\n            </form>\n        </>\n    );\n}\nexport default Form;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeInputNameAction, changeInputTextAction } from \"../actions/form\";\nimport { sendPageComments } from \"../actions/comments\";\n\nimport Form from \"../components/Form\";\n\nconst FormContainer = ({\n    inputNameValue,\n    inputTextValue,\n    changeInputName,\n    changeInputText,\n    sendComments,\n}) => (\n    <Form\n        inputNameValue={inputNameValue}\n        inputTextValue={inputTextValue}\n        handleChangeNameInput={changeInputName}\n        handleChangeTextInput={changeInputText}\n        sendComments={sendComments}\n    />\n);\n\nconst mapStateToProps = (state) => ({\n    inputNameValue: state.form.value.inputNameValue,\n    inputTextValue: state.form.value.inputTextValue,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        changeInputName: (inputValue) =>\n            dispatch(changeInputNameAction(inputValue)),\n        changeInputText: (inputValue) =>\n            dispatch(changeInputTextAction(inputValue)),\n        sendComments: sendPageComments(dispatch),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);\n","import { CHANGE_INPUT_NAME, CHANGE_INPUT_TEXT } from \"../constants/actionTypes\";\n\n//action-creator for Name input\nexport const changeInputNameAction = (inputNameValue) => ({\n    type: CHANGE_INPUT_NAME,\n    payload: inputNameValue,\n});\n\n//action-creator for Text input\nexport const changeInputTextAction = (inputTextValue) => ({\n    type: CHANGE_INPUT_TEXT,\n    payload: inputTextValue,\n});\n","import React from \"react\";\nimport \"../../styles/CommentsList.scss\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { BiCalendar, BiTime } from \"react-icons/bi\";\n\nfunction CommentsList({ comments = [] }) {\n    return (\n        <>\n            {!!comments?.length &&\n                comments.map((item) => {\n                    return (\n                        <div className='comment-wrapper'>\n                            <div className='comment'>\n                                <div className='comment-user'>\n                                    <div className='comment-user__photo'>\n                                        <FaUserCircle className='comment-user__icon' />\n                                    </div>\n                                    <div className='comment-user__name'>\n                                        <p>guest:</p>\n                                        {item.name}\n                                    </div>\n\n                                    <div className='comment-user__time'>\n                                        <div className='comment-user__time1'>\n                                            {item.created_at && (\n                                                <span>\n                                                    <BiCalendar />\n                                                </span>\n                                            )}\n                                            {item.created_at &&\n                                                item.created_at.split(\"T\")[0]}\n                                        </div>\n                                        <div className='comment-user__time2'>\n                                            <span>\n                                                <BiTime />\n                                            </span>\n                                            {item.created_at ? (\n                                                item.created_at\n                                                    .split(\"T\")[1]\n                                                    .slice(0, 5)\n                                            ) : (\n                                                <p>recently</p>\n                                            )}\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className='comment-text'>\n                                    <div className='comment-text__message'>\n                                        {item.text}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n        </>\n    );\n}\nexport default CommentsList;\n","import React from \"react\";\nimport \"../../styles/MoreComments.scss\";\nimport { IoChevronDownCircleOutline } from \"react-icons/io5\";\n\nconst MoreComments = ({ getMoreComments, lastPage, currentPage }) => {\n    return (\n        <>\n            <div className='more-btn-wrapper'>\n                {lastPage !== currentPage && (\n                    <button\n                        onClick={() => {\n                            getMoreComments(currentPage + 1);\n                        }}\n                        className='more-btn'\n                    >\n                        <div className='more-btn-inner-wrapper'>\n                            <div className='more-btn__text'>\n                                Download more...\n                            </div>\n                            <IoChevronDownCircleOutline className='more-btn__icon' />\n                        </div>\n                    </button>\n                )}\n            </div>\n        </>\n    );\n};\nexport default MoreComments;\n","export const getCommentsSelector = (state) => state.comments.comments.database;\nexport const getPagesSelector = (state) => state.comments.pages;\nexport const getLastPageSelector = (state) => state.comments.lastPage;\nexport const getCurrentPageSelector = (state) => {\n    const pages = getPagesSelector(state);\n    return pages[pages.length - 1];\n};\nexport const getSeparateCurrentPageSelector = (state) =>\n    state.comments.separateCurrentPage;\nexport const sendComments = (state) => state.form.value;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getPageComments, getMoreComments } from \"../actions/comments\";\nimport CommentsList from \"../components/CommentsList\";\nimport MoreComments from \"../components/MoreComments\";\nimport {\n    getCommentsSelector,\n    getPagesSelector,\n    getLastPageSelector,\n    getCurrentPageSelector,\n    getSeparateCurrentPageSelector,\n} from \"../selectors/comments\";\nimport ReactPaginate from \"react-paginate\";\nimport \"../styles/Paginate.scss\";\n\nconst CommentsContainer = ({\n    comments,\n    getComments,\n    getMoreComments,\n    lastPage,\n    currentPage,\n    separateCurrentPage,\n}) => {\n\n    const [initial, setInitial] = useState(true);\n    useEffect(() => {\n        async function fetchData() {\n            await getComments(1);\n            setInitial(false);\n        }\n        fetchData();\n    }, [])\n\n\n    return (\n        <>\n            {\n                !initial && <div>\n                    <CommentsList comments={comments} />\n\n                    <MoreComments\n                        lastPage={lastPage}\n                        currentPage={currentPage}\n                        getMoreComments={getMoreComments}\n                    />\n                    <div className='pagination-wrapper'>\n                        <ReactPaginate\n                            containerClassName={\"pagination-container\"}\n                            pageLinkClassName={\"pageLinkClassName\"}\n                            activeLinkClassName={\"activeLinkClassName\"}\n                            previousLinkClassName={\"previousLinkClassName\"}\n                            nextLinkClassName={\"nextLinkClassName\"}\n                            disabledClassName={\"disabledClassName\"}\n                            breakLinkClassName={\"breakLinkClassName\"}\n                            pageCount={lastPage}\n                            pageRangeDisplayed={3}\n                            marginPagesDisplayed={1}\n                            previousLabel={\"< Previous\"}\n                            nextLabel={\"Next >\"}\n                            onPageChange={(e) => {\n                                !initial && getComments(e.selected + 1);\n                            }}\n                            initialPage={currentPage - 1}\n                            forcePage={separateCurrentPage - 1}\n                        />\n                    </div>\n                </div>\n            }\n        </>\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    comments: getCommentsSelector(state),\n    lastPage: getLastPageSelector(state),\n    currentPage: getCurrentPageSelector(state),\n    separateCurrentPage: getSeparateCurrentPageSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getComments: getPageComments(dispatch),\n        getMoreComments: getMoreComments(dispatch),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentsContainer);\n","import \"../styles/App.scss\";\nimport FormContainer from \"../containers/FormContainer\";\nimport CommentsContainer from \"../containers/CommentsContainer\";\n\nfunction App() {\n    return (\n        <div className='App'>\n            <FormContainer />\n            <CommentsContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import {\n    GET_MORE_COMMENTS_REQUEST,\n    GET_MORE_COMMENTS_SUCCESS,\n    GET_COMMENTS_FAIL,\n    GET_PAGE_COMMENTS_REQUEST,\n    GET_PAGE_COMMENTS_SUCCESS,\n    ADD_COMMENT_REQUEST,\n    ADD_COMMENT_SUCCESS,\n    ADD_COMMENT_FAIL,\n} from \"../constants/actionTypes\";\n\nconst initialState = {\n    comments: {\n        isLoading: null,\n        error: null,\n        database: [],\n    },\n    separateCurrentPage: 1,\n    pages: [1],\n    lastPage: null,\n};\n\nconst commentsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_MORE_COMMENTS_REQUEST:\n            return {\n                ...state,\n                comments: {\n                    ...state.comments,\n                    isLoading: true,\n                    error: null,\n                },\n            };\n        case GET_PAGE_COMMENTS_REQUEST:\n            return {\n                ...state,\n                comments: {\n                    ...state.comments,\n                    isLoading: true,\n                    error: null,\n                },\n            };\n        case GET_MORE_COMMENTS_SUCCESS:\n            return {\n                ...state,\n                comments: {\n                    isLoading: false,\n                    error: false,\n                    database: [\n                        ...state.comments.database,\n                        ...action.payload.data,\n                    ],\n                },\n                separateCurrentPage: action.payload.current_page,\n                pages: [...state.pages, action.payload.current_page],\n                lastPage: action.payload.last_page,\n            };\n        case GET_PAGE_COMMENTS_SUCCESS:\n            return {\n                ...state,\n                comments: {\n                    isLoading: false,\n                    error: false,\n                    database: action.payload.data,\n                },\n                separateCurrentPage: action.payload.current_page,\n                pages: [action.payload.current_page],\n                lastPage: action.payload.last_page,\n            };\n\n        case GET_COMMENTS_FAIL:\n            return {\n                ...state,\n                comments: {\n                    isLoading: false,\n                    error: action.payload,\n                    database: false,\n                },\n            };\n        case ADD_COMMENT_REQUEST:\n            return {\n                ...state,\n                comments: {\n                    ...state.comments,\n                    isLoading: true,\n                    error: null,\n                },\n            };\n        case ADD_COMMENT_SUCCESS:\n            return {\n                ...state,\n                comments: {\n                    ...state.comments,\n                    isLoading: false,\n                    error: false,\n                },\n            };\n        case ADD_COMMENT_FAIL:\n            return {\n                ...state,\n                comments: {\n                    ...state.comments,\n                    isLoading: false,\n                    error: action.payload,\n                },\n            };\n        default:\n            return state;\n    }\n};\nexport default commentsReducer;\n","import { CHANGE_INPUT_NAME, CHANGE_INPUT_TEXT } from \"../constants/actionTypes\";\n\nconst initialState = {\n    value: {\n        inputNameValue: \"\",\n        inputTextValue: \"\",\n    },\n};\n\nconst formReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CHANGE_INPUT_NAME:\n            return {\n                ...state,\n                value: {\n                    ...state.value,\n                    inputNameValue: action.payload,\n                },\n            };\n        case CHANGE_INPUT_TEXT:\n            return {\n                ...state,\n                value: {\n                    ...state.value,\n                    inputTextValue: action.payload,\n                },\n            };\n        default:\n            return state;\n    }\n};\nexport default formReducer;\n","import { combineReducers } from \"redux\";\nimport commentsReducer from \"./commentsReducer\";\nimport formReducer from \"./formReducer\";\n\nexport default combineReducers({\n    comments: commentsReducer,\n    form: formReducer,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { applyMiddleware, createStore, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport \"./styles/index.scss\";\nimport App from \"./containers/App\";\nimport rootReducer from \"./reducers\";\n\n// LOGGER\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== \"production\") {\n    middleware.push(createLogger());\n}\n\n//REDUX-DEV-TOOLS\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//CREATE STORE\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middleware))\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}